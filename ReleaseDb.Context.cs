

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace ReleaseManagementAssignment
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class releasedbEntities1 : DbContext
{
    public releasedbEntities1()
        : base("name=releasedbEntities1")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<EmployeeList> EmployeeLists { get; set; }

    public virtual DbSet<EmpTeam> EmpTeams { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<Project1> Project1 { get; set; }

    public virtual DbSet<ProjectList> ProjectLists { get; set; }

    public virtual DbSet<AddEmployee> AddEmployees { get; set; }

    public virtual DbSet<Module> Modules { get; set; }

    public virtual DbSet<developer> developers { get; set; }

    public virtual DbSet<tester> testers { get; set; }


    public virtual ObjectResult<proc_CheckLogin_Result> proc_CheckLogin(Nullable<int> un, string pass)
    {

        var unParameter = un.HasValue ?
            new ObjectParameter("un", un) :
            new ObjectParameter("un", typeof(int));


        var passParameter = pass != null ?
            new ObjectParameter("pass", pass) :
            new ObjectParameter("pass", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_CheckLogin_Result>("proc_CheckLogin", unParameter, passParameter);
    }


    public virtual int S_InsertIntoProject_p(Nullable<int> pid, string pname, Nullable<System.DateTime> exStDate, Nullable<System.DateTime> exEnDate, Nullable<System.DateTime> acStDate, Nullable<System.DateTime> acEnDate)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(int));


        var pnameParameter = pname != null ?
            new ObjectParameter("Pname", pname) :
            new ObjectParameter("Pname", typeof(string));


        var exStDateParameter = exStDate.HasValue ?
            new ObjectParameter("ExStDate", exStDate) :
            new ObjectParameter("ExStDate", typeof(System.DateTime));


        var exEnDateParameter = exEnDate.HasValue ?
            new ObjectParameter("ExEnDate", exEnDate) :
            new ObjectParameter("ExEnDate", typeof(System.DateTime));


        var acStDateParameter = acStDate.HasValue ?
            new ObjectParameter("AcStDate", acStDate) :
            new ObjectParameter("AcStDate", typeof(System.DateTime));


        var acEnDateParameter = acEnDate.HasValue ?
            new ObjectParameter("AcEnDate", acEnDate) :
            new ObjectParameter("AcEnDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("S_InsertIntoProject_p", pidParameter, pnameParameter, exStDateParameter, exEnDateParameter, acStDateParameter, acEnDateParameter);
    }


    public virtual int S_AddTeamLeadtoProject_p(Nullable<int> pid, string pname, Nullable<int> leadid)
    {

        var pidParameter = pid.HasValue ?
            new ObjectParameter("Pid", pid) :
            new ObjectParameter("Pid", typeof(int));


        var pnameParameter = pname != null ?
            new ObjectParameter("Pname", pname) :
            new ObjectParameter("Pname", typeof(string));


        var leadidParameter = leadid.HasValue ?
            new ObjectParameter("leadid", leadid) :
            new ObjectParameter("leadid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("S_AddTeamLeadtoProject_p", pidParameter, pnameParameter, leadidParameter);
    }


    public virtual int S_AddEmployee_p(Nullable<int> eid, string ename, string erole)
    {

        var eidParameter = eid.HasValue ?
            new ObjectParameter("Eid", eid) :
            new ObjectParameter("Eid", typeof(int));


        var enameParameter = ename != null ?
            new ObjectParameter("Ename", ename) :
            new ObjectParameter("Ename", typeof(string));


        var eroleParameter = erole != null ?
            new ObjectParameter("Erole", erole) :
            new ObjectParameter("Erole", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("S_AddEmployee_p", eidParameter, enameParameter, eroleParameter);
    }

}

}

